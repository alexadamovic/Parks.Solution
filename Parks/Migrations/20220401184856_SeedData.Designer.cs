// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parks.Models;

namespace Parks.Migrations
{
    [DbContext(typeof(ParksContext))]
    [Migration("20220401184856_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Parks.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            State = "OR"
                        },
                        new
                        {
                            LocationId = 2,
                            State = "CO"
                        },
                        new
                        {
                            LocationId = 3,
                            State = "HI"
                        },
                        new
                        {
                            LocationId = 4,
                            State = "CA"
                        });
                });

            modelBuilder.Entity("Parks.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsNationalPark")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsStatePark")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ParkId");

                    b.HasIndex("LocationId");

                    b.ToTable("Parks");

                    b.HasData(
                        new
                        {
                            ParkId = 1,
                            IsNationalPark = true,
                            IsStatePark = false,
                            LocationId = 1,
                            Name = "Crater Lake"
                        },
                        new
                        {
                            ParkId = 2,
                            IsNationalPark = true,
                            IsStatePark = false,
                            LocationId = 2,
                            Name = "Black Canyon of the Gunnison"
                        },
                        new
                        {
                            ParkId = 3,
                            IsNationalPark = true,
                            IsStatePark = false,
                            LocationId = 2,
                            Name = "Mesa Verde"
                        },
                        new
                        {
                            ParkId = 4,
                            IsNationalPark = true,
                            IsStatePark = false,
                            LocationId = 3,
                            Name = "Haleakala"
                        },
                        new
                        {
                            ParkId = 5,
                            IsNationalPark = true,
                            IsStatePark = false,
                            LocationId = 4,
                            Name = "Joshua Tree"
                        },
                        new
                        {
                            ParkId = 6,
                            IsNationalPark = true,
                            IsStatePark = false,
                            LocationId = 4,
                            Name = "Death Valley"
                        },
                        new
                        {
                            ParkId = 7,
                            IsNationalPark = true,
                            IsStatePark = false,
                            LocationId = 4,
                            Name = "Yosemite"
                        },
                        new
                        {
                            ParkId = 8,
                            IsNationalPark = false,
                            IsStatePark = true,
                            LocationId = 1,
                            Name = "Agate Beach"
                        },
                        new
                        {
                            ParkId = 9,
                            IsNationalPark = false,
                            IsStatePark = true,
                            LocationId = 1,
                            Name = "Tryon Creek"
                        },
                        new
                        {
                            ParkId = 10,
                            IsNationalPark = false,
                            IsStatePark = true,
                            LocationId = 3,
                            Name = "Wailua River"
                        },
                        new
                        {
                            ParkId = 11,
                            IsNationalPark = false,
                            IsStatePark = true,
                            LocationId = 4,
                            Name = "Moonlight Beach"
                        },
                        new
                        {
                            ParkId = 12,
                            IsNationalPark = false,
                            IsStatePark = true,
                            LocationId = 4,
                            Name = "San Bruno Mountain"
                        },
                        new
                        {
                            ParkId = 13,
                            IsNationalPark = false,
                            IsStatePark = true,
                            LocationId = 2,
                            Name = "Sweitzer Lake"
                        },
                        new
                        {
                            ParkId = 14,
                            IsNationalPark = false,
                            IsStatePark = true,
                            LocationId = 2,
                            Name = "Roxborough"
                        });
                });

            modelBuilder.Entity("Parks.Models.Park", b =>
                {
                    b.HasOne("Parks.Models.Location", null)
                        .WithMany("Parks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Parks.Models.Location", b =>
                {
                    b.Navigation("Parks");
                });
#pragma warning restore 612, 618
        }
    }
}
